%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: ff771ccdf4150419d9ff4d342b069aae, type: 3}
  m_Name: 6-BuildCar
  m_EditorClassIdentifier: 
  m_Paragraphs:
    m_Items:
    - m_Type: 6
      Title:
        m_Untranslated: 
      Text:
        m_Untranslated: 
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 2800000, guid: a60da34b7e2e641168f5954b8a0bc3aa, type: 3}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
    - m_Type: 0
      Title:
        m_Untranslated: GameObject Hierarchy
      Text:
        m_Untranslated: 'Each 3D object you create for your monster car will need
          to be categorized or stored within a GameObject hierarchy in order for
          your vehicle to work with the controller script. There are a few different
          ways to set up a vehicle''s hierarchy, but the approach you''ll be doing
          is most common.


          Each GameObject in the Hierarchy window is
          a parent, child, or both - depending on where it''s situated in the hierarchy.
          For example, the Main Camera is a parent GameObject, but I could move it
          within a character GameObject I want the camera to follow. That would then
          make Main Camera a child of the character GameObject, which is also now
          a parent GameObject of Main Camera.


          Let''s get a basic hierarchy
          structure set up within the Hierarchy window before you begin creating
          3D GameObjects.'
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 0}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
    - m_Type: 1
      Title:
        m_Untranslated: Monster Car Hierarchy
      Text:
        m_Untranslated: "1. Create a new empty GameObject by right-clicking a blank
          area of the Hierarchy window or selecting the + dropdown button. Rename
          it to Monster Car.\n\n2. Within that GameObject, create a new empty GameObject
          by right-clicking on Monster Car and selecting Create Empty. Rename it
          Chassis or Body (your choice). In the tutorials, we'll refer to this GameObject
          as \"Chassis\".\n\nNOTE: Be sure that the Chassis GameObject is inside
          the Monster Car - shown by an indentation of Chassis and a collapsible
          dropdown arrow beside Monster Car. If needed, drag Chassis into the Monster
          Car GameObject.\n\n3. Create another new empty GameObject under Monster
          Car. Rename it Wheels. This GameObject should be at the same child level
          as Chassis - meaning it should be indented the same amount as Chassis below
          Monster Car.\n\n4. Create two more new empty GameObjects. Make both of
          these GameObjects children of the Wheels GameObject - meaning they should
          both be indented equally underneath Wheels.\n\n5. Rename the two GameObjects
          under Wheels as Meshes and Colliders.\n\n6. Check to make sure your Monster
          Car GameObject hierarchy looks similar to the one below.\n\n- Monster Car\n     
          - Chassis\n      - Wheels\n            - Meshes\n            - Colliders\n\n7.
          To make sure the Main Camera shows you your vehicle during testing in Play
          mode, add the CameraFollow.cs file to the Main Camera components in the
          Inspector window.\n\n8. Set the script component's Target to your Monster
          Car GameObject transform.\n\n9. Adjust the Offset values as needed in order
          to make sure your vehicle is in view once you've built your monster car.\n\nNow
          you're ready to add some 3D objects to build your monster car! Select the
          Next button to continue."
      m_Tutorial: {fileID: 0}
      m_Image: {fileID: 0}
      m_Video: {fileID: 0}
      m_CriteriaCompletion: 0
      m_Criteria:
        m_Items: []
      m_MaskingSettings:
        m_MaskingEnabled: 0
        m_UnmaskedViews: []
      m_Summary: 
      m_Description: 
      m_InstructionBoxTitle: 
      m_InstructionText: 
      m_TutorialButtonText: 
  m_CameraSettings:
    m_CameraMode: 0
    m_FocusMode: 0
    m_Orthographic: 0
    m_Size: 0
    m_Pivot: {x: 0, y: 0, z: 0}
    m_Rotation: {x: 0, y: 0, z: 0, w: 0}
    m_FrameObject:
      m_SceneGuid: 
      m_GameObjectGuid: 
      m_SerializedComponentType:
        m_TypeName: 
      m_ComponentIndex: 0
      m_AssetObject: {fileID: 0}
      m_Prefab: {fileID: 0}
    m_Enabled: 0
  NextButton:
    m_Untranslated: Next
  DoneButton:
    m_Untranslated: Done
  m_CompletedSound: {fileID: 0}
  m_AutoAdvance: 0
  Showing:
    m_PersistentCalls:
      m_Calls: []
  Shown:
    m_PersistentCalls:
      m_Calls: []
  Staying:
    m_PersistentCalls:
      m_Calls: []
  CriteriaValidated:
    m_PersistentCalls:
      m_Calls: []
  MaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  NonMaskingSettingsChanged:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforePageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnAfterPageShown:
    m_PersistentCalls:
      m_Calls: []
  m_OnTutorialPageStay:
    m_PersistentCalls:
      m_Calls: []
  m_OnBeforeTutorialQuit:
    m_PersistentCalls:
      m_Calls: []
  m_NextButton: Next
  m_DoneButton: Done
